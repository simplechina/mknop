name: N1-OpenWrt-CI

on:
  # push:
  #   branches:
  #     - master
  schedule:
    - cron: '0 22 * * *'
  repository_dispatch:
    types: run

jobs:
  build:
    runs-on: [ubuntu-18.04]
    if: github.event_name == 'schedule' || github.event.action == 'run'

    steps:
      - name: Checkout
        uses: actions/checkout@master

      - name: Install depends
        run: |
          sudo swapoff /swapfile
          sudo rm -rf /swapfile /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /usr/lib/jvm /opt/ghc
          sudo -E apt-get -qq update
          sudo -E apt-get -qq install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs gcc-multilib g++-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler antlr3 gperf
          sudo -E apt-get -qq autoremove --purge
          sudo -E apt-get -qq clean

          df -hT

      - name: Clone Lean's openwrt
        run: |
          git clone https://github.com/coolsnowwolf/lede

      - name: Install feeds
        run: |
          cd lede
          sed -i '5 s/#//' ./feeds.conf.default
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: Make config
        run: |
          cd lede
          sed -i '$d' target/linux/armvirt/image/Makefile
          echo -e 'define Device/Phicomm-n1
          DEVICE_MODEL := Phicomm-n1
            DEVICE_PACKAGES := \
              cypress-firmware-43430-sdio \
              cypress-nvram-43430-sdio-rpi-3b \
              cypress-firmware-43455-sdio \
              cypress-nvram-43455-sdio-rpi-3b-plus \
              kmod-brcmfmac wpad-basic htop lscpu \
              fdisk lsblk parted blkid losetup \
              kmod-fs-ext4 kmod-fs-vfat kmod-fs-exfat ntfs-3g \
              e2fsprogs dosfstools ntfsprogs_ntfs-3g \
              kmod-usb-storage kmod-usb-storage-extras kmod-usb-storage-uas \
              kmod-usb-net kmod-usb-net-asix kmod-usb-net-asix-ax88179 \
              luci-app-netdata luci-app-samba4 luci-app-cifs-mount
          endef
          ifeq ($(SUBTARGET),64)
            TARGET_DEVICES += Phicomm-n1
          endif\n
          $(eval $(call BuildImage))' >> target/linux/armvirt/image/Makefile

          cat target/linux/armvirt/image/Makefile

          cat > .config << EOF
          CONFIG_TARGET_armvirt=y
          CONFIG_TARGET_armvirt_64=y
          CONFIG_TARGET_armvirt_64_DEVICE_Phicomm-n1=y
          CONFIG_BRCMFMAC_SDIO=y
          # CONFIG_UnblockNeteaseMusic_NodeJS is not set
          EOF

          make defconfig
          cat .config

      - name: Compile openwrt
        run: |
          cd lede
          make download -j8
          make -j$(nproc) || make -j1 V=s

      - name: Build firmware
        env:
          TZ: Asia/Shanghai
        run: |
          mkdir docker out
          cp lede/bin/targets/*/*/*.tar.gz ./openwrt
          cp lede/.config ./out
          cp openwrt/*.tar.gz ./docker
          cp out/.config ./docker
          
          sudo ./make -d
          
          echo "::set-env name=firmware_name::$(date "+%y.%m.%d")-phicomm-n1-openwrt-firmware"
          echo "::set-env name=docker_firmware_name::$(date "+%y.%m.%d")-phicomm-n1-openwrt-docker-firmware"

      - name: Upload firmware
        uses: actions/upload-artifact@master
        with:
          name: ${{ env.firmware_name }}
          path: ./out
      
      - name: Upload docker firmware
        uses: actions/upload-artifact@master
        with:
          name: ${{ env.docker_firmware_name }}
          path: ./docker
